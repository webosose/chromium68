# Copyright (c) 2018 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import("//neva/neva.gni")

if (use_cbe) {
  assert(!is_component_build, "CBE uses static build.")
  assert(is_linux)

  shared_library("chromium_cbe") {
    output_name = "cbe"
    sources = []

    deps = [
      "//content/public/app:both",
      "//content/public/common:service_names",
    ]

    public_deps = []

    if (is_chrome_cbe) {
      sources += [
        "../../chrome/app/chrome_dll_resource.h",
        "../../chrome/app/chrome_main.cc",
        "../../chrome/app/chrome_main_delegate.cc",
        "../../chrome/app/chrome_main_delegate.h",
      ]

      deps += [
        "//build/config:exe_and_shlib_deps",
        # On Linux, link the dependencies (libraries) that make up actual
        # Chromium functionality directly into the executable.
        "//chrome:browser_dependencies",
        "//chrome:child_dependencies",

        # Needed to use the master_preferences functions
        "//chrome/installer/util:with_no_strings",

        # For headless mode.
        "//headless:headless_shell_lib",
        "//services/service_manager/embedder",
      ]

      public_deps += [
        "//chrome/common:buildflags",
        "//chrome:xdg_mime",  # Needs to be public for installer to consume files.
      ]
    }

    if (is_app_shell_cbe) {
      public_deps += [
        "//extensions/shell:app_shell_lib"
      ]
      deps += [
        "//extensions:shell_and_test_pak",
      ]
    }

    if (is_wam_demo_cbe) {
      deps += [
        "//neva/wam_demo:wam_demo_lib",
      ]
    }

    if (is_webos || is_agl) {
      deps += [
        "//webos:weboswebruntime"
      ]
    }
  }
}
