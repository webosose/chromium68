# Copyright (c) 2018 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import("//neva/neva.gni")

config("config") {
  configs = []
  defines = []

  cflags = [
    "-Wno-unused-variable",
  ]

  include_dirs = [
    ".",
    "$target_gen_dir",
  ]

  # All defines for neva must be defined here
  if (use_injections) {
    defines += [ "USE_INJECTIONS=1" ]
  }

  if (enable_browser_control_webapi) {
    defines += [ "ENABLE_BROWSER_CONTROL_WEBAPI=1" ]
  }

   if (enable_sample_webapi) {
    defines += [ "ENABLE_SAMPLE_WEBAPI=1" ]
  }

  if (enable_memorymanager_webapi) {
    defines += [ "ENABLE_MEMORYMANAGER_WEBAPI=1" ]
  }

  if (neva_dcheck_always_on) {
    defines += [ "NEVA_DCHECK_ALWAYS_ON=1" ]
  }

  if (ozone_platform_wayland_external) {
    defines += [ "OZONE_PLATFORM_WAYLAND_EXTERNAL=1" ]
  }

  if (is_webos) {
    defines += [
      "OS_WEBOS=1",
      "VIDEO_HOLE=1",
    ]

    enable_webm_audio_codecs = false
  }

  if (use_neva_appruntime) {
    defines += [ "USE_NEVA_APPRUNTIME=1" ]
  }

  if (use_neva_media) {
    defines += [ "USE_NEVA_MEDIA=1" ]
  }

  if (enable_webm_audio_codecs) {
    defines += [ "ENABLE_WEBM_AUDIO_CODECS=1" ]
  }

  if (enable_webm_video_codecs) {
    defines += [ "ENABLE_WEBM_VIDEO_CODECS=1" ]
  }

  if (use_memory_trace) {
    defines += [ "USE_MEMORY_TRACE=1" ]
  }

  if(is_linux && is_debug) {
    cflags += [ "-Wno-deprecated-register" ]
  }

  if (use_videotexture) {
    defines += [ "USE_VIDEO_TEXTURE=1" ]
  }

  if (use_gst_media) {
    defines += [
      "USE_GST_MEDIA",
      "UMS_INTERNAL_API_VERSION=2",
    ]
  }

  if (use_cbe) {
    defines += [
      "USE_CBE=1",
    ]
  }

  if (use_pmlog && current_toolchain == default_toolchain) {
    defines += [ "USE_PMLOG=1" ]
  }

  if (enable_in_process_stacktraces) {
    defines += [ "ENABLE_IN_PROCESS_STACKTRACES=1" ]
  }

  if (enable_emmc_optimizations) {
    defines += [ "ENABLE_EMMC_OPTIMIZATIONS=1" ]
  }

  if (use_lttng && current_toolchain == default_toolchain) {
    configs += [ "//build/config/linux/lttng:lttngust" ]
  }

  if (use_webos_gpu_info_collector) {
    defines += [ "USE_WEBOS_GPU_INFO_COLLECTOR=1" ]
  }

  if (use_webos_v8_snapshot) {
    defines += [ "USE_WEBOS_V8_SNAPSHOT=1" ]
  }

  if (use_single_window_mode) {
    defines += [ "USE_SINGLE_WINDOW_MODE" ]
  }
}
